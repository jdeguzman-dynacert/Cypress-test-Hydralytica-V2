{
  "stats": {
    "suites": 1,
    "tests": 14,
    "passes": 0,
    "pending": 0,
    "failures": 14,
    "start": "2025-08-18T18:44:01.577Z",
    "end": "2025-08-18T18:47:12.549Z",
    "duration": 190972,
    "testsRegistered": 14,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "d1cbb9d6-d64c-4c33-9613-a531bea696ae",
      "title": "",
      "fullFile": "cypress\\e2e\\create_organization.cy.js",
      "file": "cypress\\e2e\\create_organization.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8f482027-17c8-4c6e-97be-e8f0fd2b2178",
          "title": "Hydralytica v2 - Create Organization with Validations",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "creates a new organization with valid inputs",
              "fullTitle": "Hydralytica v2 - Create Organization with Validations creates a new organization with valid inputs",
              "timedOut": null,
              "duration": 33408,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('input[name=\"name\"]').clear().type(uniqueOrgName);\ncy.get('select[aria-hidden=\"true\"]').eq(0).select('Corporate', {\n  force: true\n});\ncy.get('select[aria-hidden=\"true\"]').eq(1).find('option').contains('dynaCERT Inc.').then($option => {\n  cy.get('select[aria-hidden=\"true\"]').eq(1).select($option.attr('value'), {\n    force: true\n  });\n});\ncy.get('textarea[name=\"notes\"]').clear().type('Test org created by Cypress.');\ncy.get('input[name=\"contactFields.contact\"]').clear().type(uniqueEmail);\ncy.get('textarea[name=\"contactFields.description\"]').clear().type('Main contact email.');\ncy.contains('button', 'Add').eq(0).click({\n  force: true\n}); // Add contact\ncy.get('input[name=\"addressFields.country\"]').clear().type('Canada');\ncy.get('input[name=\"addressFields.city\"]').clear().type('Toronto');\ncy.get('input[name=\"addressFields.address\"]').clear().type('123 Queen Street');\ncy.get('input[name=\"addressFields.zipCode\"]').clear().type('M5H 2N2');\ncy.get('input[name=\"addressFields.reference\"]').clear().type('Suite 500');\ncy.get('input[name=\"addressFields.description\"]').clear().type('Head office location.');\ncy.contains('div[data-slot=\"card-title\"]', 'Address').parents('[data-slot=\"card\"]').within(() => {\n  cy.contains('button', 'Add').click(); // Add address\n});\ncy.contains('button', 'Create', {\n  timeout: 10000\n}).click();\ncy.contains(_successMessages.successMessages.create).should('be.visible');\n(0, _utils.logTestResult)('Valid organization creation', 'pass');",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Created successfully!' but never did.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Created successfully!' but never did.\n    at Context.eval (webpack://hydralytica-tests/./cypress/e2e/create_organization.cy.js:50:40)",
                "diff": null
              },
              "uuid": "83a07482-5af5-4cf8-bcb4-8e5b41880023",
              "parentUUID": "8f482027-17c8-4c6e-97be-e8f0fd2b2178",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "shows validation errors when required fields are empty",
              "fullTitle": "Hydralytica v2 - Create Organization with Validations shows validation errors when required fields are empty",
              "timedOut": null,
              "duration": 8720,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('input[name=\"name\"]').clear().blur();\ncy.contains(_errorMessages.validationErrors.orgNameRequired).should('be.visible');\ncy.get('input[name=\"contactFields.contact\"]').clear();\ncy.contains('button', 'Add').eq(0).click({\n  force: true\n});\ncy.contains(_errorMessages.validationErrors.emailRequired).should('be.visible');\ncy.get('input[name=\"addressFields.country\"]').clear();\ncy.contains('button', 'Add').last().click({\n  force: true\n});\ncy.contains(_errorMessages.validationErrors.addressIsRequired).should('be.visible');\n(0, _utils.logTestResult)('Required fields validation', 'pass');",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Organization name is required' but never did.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Organization name is required' but never did.\n    at Context.eval (webpack://hydralytica-tests/./cypress/e2e/create_organization.cy.js:57:50)",
                "diff": null
              },
              "uuid": "1dfb7e2f-a4c2-422e-8ad4-e565a3bb763c",
              "parentUUID": "8f482027-17c8-4c6e-97be-e8f0fd2b2178",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "rejects overly long organization name",
              "fullTitle": "Hydralytica v2 - Create Organization with Validations rejects overly long organization name",
              "timedOut": null,
              "duration": 40062,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const longName = 'A'.repeat(256);\ncy.get('input[name=\"name\"]').clear().type(longName).blur();\ncy.contains('button', 'Create').eq(0).click({\n  force: true\n});\ncy.contains(_errorMessages.validationErrors.tooLong).should('be.visible');\n(0, _utils.logTestResult)('Reject long org name', 'pass');",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Must be less than 255 characters' but never did.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Must be less than 255 characters' but never did.\n    at Context.eval (webpack://hydralytica-tests/./cypress/e2e/create_organization.cy.js:75:42)",
                "diff": null
              },
              "uuid": "9d66f705-cad8-4083-b554-2643ab334923",
              "parentUUID": "8f482027-17c8-4c6e-97be-e8f0fd2b2178",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "rejects overly short organization name",
              "fullTitle": "Hydralytica v2 - Create Organization with Validations rejects overly short organization name",
              "timedOut": null,
              "duration": 9034,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('input[name=\"name\"]').clear().type('A').blur();\ncy.contains('button', 'Create').eq(0).click({\n  force: true\n});\ncy.contains(_errorMessages.validationErrors.tooShort).should('be.visible');\n(0, _utils.logTestResult)('Reject short org name', 'pass');",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Must be at least 2 characters' but never did.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Must be at least 2 characters' but never did.\n    at Context.eval (webpack://hydralytica-tests/./cypress/e2e/create_organization.cy.js:83:43)",
                "diff": null
              },
              "uuid": "d7a968af-83df-4e9e-bf5b-0510af8f270c",
              "parentUUID": "8f482027-17c8-4c6e-97be-e8f0fd2b2178",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "rejects SQL injection attempt in organization name",
              "fullTitle": "Hydralytica v2 - Create Organization with Validations rejects SQL injection attempt in organization name",
              "timedOut": null,
              "duration": 5842,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('input[name=\"name\"]').clear().type(\"' OR 1=1 --\").blur();\ncy.contains('button', 'Create').eq(0).click({\n  force: true\n});\ncy.contains(_errorMessages.validationErrors.invalidCharacters).should('be.visible');\n(0, _utils.logTestResult)('Reject SQL injection in org name', 'pass');",
              "err": {
                "message": "CypressError: `cy.contains()` can only accept a string, number or regular expression.\n\nhttps://on.cypress.io/contains",
                "estack": "CypressError: `cy.contains()` can only accept a string, number or regular expression.\n\nhttps://on.cypress.io/contains\n    at $Command.contains (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:135489:68)\n    at cyFn (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:141641:19)\n    at <unknown> (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:147477:15)\n    at tryCatcher (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise._settlePromiseFromHandler (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:1489:31)\n    at Promise._settlePromise (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:1546:18)\n    at Promise._settlePromiseCtx (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:1583:10)\n    at _drainQueueStep (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:2381:12)\n    at _drainQueue (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:2370:9)\n    at Async._drainQueues (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:2386:5)\n    at Async.drainQueues (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:2256:14)",
                "diff": null
              },
              "uuid": "25d871cb-e0c5-4594-aa33-7e6cc35cf063",
              "parentUUID": "8f482027-17c8-4c6e-97be-e8f0fd2b2178",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "rejects XSS attempt in notes field",
              "fullTitle": "Hydralytica v2 - Create Organization with Validations rejects XSS attempt in notes field",
              "timedOut": null,
              "duration": 9281,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('textarea[name=\"notes\"]').clear().type(\"<script>alert('xss')</script>\").blur();\ncy.contains('button', 'Create').eq(0).click({\n  force: true\n});\ncy.contains(_errorMessages.validationErrors.invalidCharacters).should('be.visible');\n(0, _utils.logTestResult)('Reject XSS in notes', 'pass');",
              "err": {
                "message": "CypressError: `cy.contains()` can only accept a string, number or regular expression.\n\nhttps://on.cypress.io/contains",
                "estack": "CypressError: `cy.contains()` can only accept a string, number or regular expression.\n\nhttps://on.cypress.io/contains\n    at $Command.contains (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:135489:68)\n    at cyFn (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:141641:19)\n    at <unknown> (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:147477:15)\n    at tryCatcher (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise._settlePromiseFromHandler (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:1489:31)\n    at Promise._settlePromise (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:1546:18)\n    at Promise._settlePromiseCtx (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:1583:10)\n    at _drainQueueStep (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:2381:12)\n    at _drainQueue (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:2370:9)\n    at Async._drainQueues (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:2386:5)\n    at Async.drainQueues (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:2256:14)",
                "diff": null
              },
              "uuid": "efaa09de-f24c-4a75-91dc-31548b489a98",
              "parentUUID": "8f482027-17c8-4c6e-97be-e8f0fd2b2178",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "rejects invalid email: plainaddress",
              "fullTitle": "Hydralytica v2 - Create Organization with Validations rejects invalid email: plainaddress",
              "timedOut": null,
              "duration": 6629,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('input[name=\"contactFields.contact\"]').clear().type(email);\ncy.contains('button', 'Add').eq(0).click({\n  force: true\n});\ncy.contains(_errorMessages.validationErrors.email).should('be.visible');\n(0, _utils.logTestResult)(`Reject invalid email: ${email}`, 'pass');",
              "err": {
                "message": "CypressError: `cy.contains()` can only accept a string, number or regular expression.\n\nhttps://on.cypress.io/contains",
                "estack": "CypressError: `cy.contains()` can only accept a string, number or regular expression.\n\nhttps://on.cypress.io/contains\n    at $Command.contains (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:135489:68)\n    at cyFn (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:141641:19)\n    at <unknown> (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:147477:15)\n    at tryCatcher (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise._settlePromiseFromHandler (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:1489:31)\n    at Promise._settlePromise (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:1546:18)\n    at Promise._settlePromiseCtx (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:1583:10)\n    at _drainQueueStep (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:2381:12)\n    at _drainQueue (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:2370:9)\n    at Async._drainQueues (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:2386:5)\n    at Async.drainQueues (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:2256:14)",
                "diff": null
              },
              "uuid": "6e782a2d-29cd-4e71-89b6-3165cd1159fe",
              "parentUUID": "8f482027-17c8-4c6e-97be-e8f0fd2b2178",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "rejects invalid email: @missingusername.com",
              "fullTitle": "Hydralytica v2 - Create Organization with Validations rejects invalid email: @missingusername.com",
              "timedOut": null,
              "duration": 6457,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('input[name=\"contactFields.contact\"]').clear().type(email);\ncy.contains('button', 'Add').eq(0).click({\n  force: true\n});\ncy.contains(_errorMessages.validationErrors.email).should('be.visible');\n(0, _utils.logTestResult)(`Reject invalid email: ${email}`, 'pass');",
              "err": {
                "message": "CypressError: `cy.contains()` can only accept a string, number or regular expression.\n\nhttps://on.cypress.io/contains",
                "estack": "CypressError: `cy.contains()` can only accept a string, number or regular expression.\n\nhttps://on.cypress.io/contains\n    at $Command.contains (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:135489:68)\n    at cyFn (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:141641:19)\n    at <unknown> (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:147477:15)\n    at tryCatcher (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise._settlePromiseFromHandler (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:1489:31)\n    at Promise._settlePromise (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:1546:18)\n    at Promise._settlePromiseCtx (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:1583:10)\n    at _drainQueueStep (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:2381:12)\n    at _drainQueue (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:2370:9)\n    at Async._drainQueues (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:2386:5)\n    at Async.drainQueues (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:2256:14)",
                "diff": null
              },
              "uuid": "43fd615d-c9e4-4924-8c0d-81b1e008b45f",
              "parentUUID": "8f482027-17c8-4c6e-97be-e8f0fd2b2178",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "rejects invalid email: username@.com",
              "fullTitle": "Hydralytica v2 - Create Organization with Validations rejects invalid email: username@.com",
              "timedOut": null,
              "duration": 6381,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('input[name=\"contactFields.contact\"]').clear().type(email);\ncy.contains('button', 'Add').eq(0).click({\n  force: true\n});\ncy.contains(_errorMessages.validationErrors.email).should('be.visible');\n(0, _utils.logTestResult)(`Reject invalid email: ${email}`, 'pass');",
              "err": {
                "message": "CypressError: `cy.contains()` can only accept a string, number or regular expression.\n\nhttps://on.cypress.io/contains",
                "estack": "CypressError: `cy.contains()` can only accept a string, number or regular expression.\n\nhttps://on.cypress.io/contains\n    at $Command.contains (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:135489:68)\n    at cyFn (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:141641:19)\n    at <unknown> (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:147477:15)\n    at tryCatcher (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise._settlePromiseFromHandler (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:1489:31)\n    at Promise._settlePromise (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:1546:18)\n    at Promise._settlePromiseCtx (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:1583:10)\n    at _drainQueueStep (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:2381:12)\n    at _drainQueue (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:2370:9)\n    at Async._drainQueues (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:2386:5)\n    at Async.drainQueues (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:2256:14)",
                "diff": null
              },
              "uuid": "6599eec3-c7c1-4b5d-80b7-67d26825a9ac",
              "parentUUID": "8f482027-17c8-4c6e-97be-e8f0fd2b2178",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "rejects invalid email: user name@example.com",
              "fullTitle": "Hydralytica v2 - Create Organization with Validations rejects invalid email: user name@example.com",
              "timedOut": null,
              "duration": 7425,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('input[name=\"contactFields.contact\"]').clear().type(email);\ncy.contains('button', 'Add').eq(0).click({\n  force: true\n});\ncy.contains(_errorMessages.validationErrors.email).should('be.visible');\n(0, _utils.logTestResult)(`Reject invalid email: ${email}`, 'pass');",
              "err": {
                "message": "CypressError: `cy.contains()` can only accept a string, number or regular expression.\n\nhttps://on.cypress.io/contains",
                "estack": "CypressError: `cy.contains()` can only accept a string, number or regular expression.\n\nhttps://on.cypress.io/contains\n    at $Command.contains (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:135489:68)\n    at cyFn (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:141641:19)\n    at <unknown> (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:147477:15)\n    at tryCatcher (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise._settlePromiseFromHandler (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:1489:31)\n    at Promise._settlePromise (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:1546:18)\n    at Promise._settlePromiseCtx (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:1583:10)\n    at _drainQueueStep (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:2381:12)\n    at _drainQueue (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:2370:9)\n    at Async._drainQueues (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:2386:5)\n    at Async.drainQueues (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:2256:14)",
                "diff": null
              },
              "uuid": "29238a12-6580-42e7-9cd2-2fa83b1b2c7d",
              "parentUUID": "8f482027-17c8-4c6e-97be-e8f0fd2b2178",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "rejects invalid email: username@example..com",
              "fullTitle": "Hydralytica v2 - Create Organization with Validations rejects invalid email: username@example..com",
              "timedOut": null,
              "duration": 9938,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('input[name=\"contactFields.contact\"]').clear().type(email);\ncy.contains('button', 'Add').eq(0).click({\n  force: true\n});\ncy.contains(_errorMessages.validationErrors.email).should('be.visible');\n(0, _utils.logTestResult)(`Reject invalid email: ${email}`, 'pass');",
              "err": {
                "message": "CypressError: `cy.contains()` can only accept a string, number or regular expression.\n\nhttps://on.cypress.io/contains",
                "estack": "CypressError: `cy.contains()` can only accept a string, number or regular expression.\n\nhttps://on.cypress.io/contains\n    at $Command.contains (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:135489:68)\n    at cyFn (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:141641:19)\n    at <unknown> (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:147477:15)\n    at tryCatcher (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise._settlePromiseFromHandler (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:1489:31)\n    at Promise._settlePromise (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:1546:18)\n    at Promise._settlePromiseCtx (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:1583:10)\n    at _drainQueueStep (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:2381:12)\n    at _drainQueue (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:2370:9)\n    at Async._drainQueues (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:2386:5)\n    at Async.drainQueues (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:2256:14)",
                "diff": null
              },
              "uuid": "e5cb620e-feb5-42c4-991c-a03ed1ef63f4",
              "parentUUID": "8f482027-17c8-4c6e-97be-e8f0fd2b2178",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "shows aria-invalid on empty required fields after blur",
              "fullTitle": "Hydralytica v2 - Create Organization with Validations shows aria-invalid on empty required fields after blur",
              "timedOut": null,
              "duration": 10298,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('input[name=\"name\"]').clear().blur();\ncy.get('input[name=\"name\"]').should('have.attr', 'aria-invalid', 'true');\ncy.get('input[name=\"contactFields.contact\"]').clear().blur();\ncy.get('input[name=\"contactFields.contact\"]').should('have.attr', 'aria-invalid', 'true');\n(0, _utils.logTestResult)('Aria-invalid accessibility checks', 'pass');",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: expected '<input#:Ropuuunlb:-form-item.border-input.file:text-foreground.placeholder:text-muted-foreground.selection:bg-primary.selection:text-primary-foreground.flex.h-9.w-full.min-w-0.rounded-md.border.bg-transparent.px-3.py-1.text-base.shadow-xs.transition-[color,box-shadow].outline-none.file:inline-flex.file:h-7.file:border-0.file:bg-transparent.file:text-sm.file:font-medium.disabled:pointer-events-none.disabled:cursor-not-allowed.disabled:opacity-50.md:text-sm.focus-visible:border-ring.focus-visible:ring-ring/50.focus-visible:ring-[3px].aria-invalid:ring-destructive/20.dark:aria-invalid:ring-destructive/40.aria-invalid:border-destructive>' to have attribute 'aria-invalid' with the value 'true', but the value was 'false'",
                "estack": "AssertionError: Timed out retrying after 4000ms: expected '<input#:Ropuuunlb:-form-item.border-input.file:text-foreground.placeholder:text-muted-foreground.selection:bg-primary.selection:text-primary-foreground.flex.h-9.w-full.min-w-0.rounded-md.border.bg-transparent.px-3.py-1.text-base.shadow-xs.transition-[color,box-shadow].outline-none.file:inline-flex.file:h-7.file:border-0.file:bg-transparent.file:text-sm.file:font-medium.disabled:pointer-events-none.disabled:cursor-not-allowed.disabled:opacity-50.md:text-sm.focus-visible:border-ring.focus-visible:ring-ring/50.focus-visible:ring-[3px].aria-invalid:ring-destructive/20.dark:aria-invalid:ring-destructive/40.aria-invalid:border-destructive>' to have attribute 'aria-invalid' with the value 'true', but the value was 'false'\n    at Context.eval (webpack://hydralytica-tests/./cypress/e2e/create_organization.cy.js:124:33)",
                "diff": "- 'false'\n+ 'true'\n"
              },
              "uuid": "ed772b1c-c9ea-4a50-b47a-36097f1cb098",
              "parentUUID": "8f482027-17c8-4c6e-97be-e8f0fd2b2178",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "resets form when clicking Cancel",
              "fullTitle": "Hydralytica v2 - Create Organization with Validations resets form when clicking Cancel",
              "timedOut": null,
              "duration": 12242,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('input[name=\"name\"]').clear().type('Temp Org');\ncy.get('input[name=\"contactFields.contact\"]').clear().type('temp@example.com');\ncy.contains('button', 'Cancel').click();\ncy.get('input[name=\"name\"]').should('have.value', '');\ncy.get('input[name=\"contactFields.contact\"]').should('have.value', '');\n(0, _utils.logTestResult)('Cancel button resets form', 'pass');",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `input[name=\"name\"]`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `input[name=\"name\"]`, but never found it.\n    at Context.eval (webpack://hydralytica-tests/./cypress/e2e/create_organization.cy.js:137:33)",
                "diff": null
              },
              "uuid": "222c03fe-f4ff-4264-a1b8-1e7e15c7960c",
              "parentUUID": "8f482027-17c8-4c6e-97be-e8f0fd2b2178",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "displays error message on server failure",
              "fullTitle": "Hydralytica v2 - Create Organization with Validations displays error message on server failure",
              "timedOut": null,
              "duration": 22514,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', '/organizations', {\n  statusCode: 500,\n  body: {\n    error: 'Internal Server Error'\n  }\n}).as('postOrgFail');\ncy.get('input[name=\"name\"]').clear().type(uniqueOrgName);\ncy.get('input[name=\"contactFields.contact\"]').clear().type(uniqueEmail);\ncy.get('select[aria-hidden=\"true\"]').eq(0).select('Corporate', {\n  force: true\n});\ncy.get('select[aria-hidden=\"true\"]').eq(1).find('option').contains('dynaCERT Inc.').then($option => {\n  cy.get('select[aria-hidden=\"true\"]').eq(1).select($option.attr('value'), {\n    force: true\n  });\n});\ncy.contains('button', 'Create').click();\ncy.wait('@postOrgFail');\ncy.contains(_errorMessages.statusErrors.create).should('be.visible');\n(0, _utils.logTestResult)('Server error handling', 'pass');",
              "err": {
                "message": "CypressError: Timed out retrying after 5000ms: `cy.wait()` timed out waiting `5000ms` for the 1st request to the route: `postOrgFail`. No request ever occurred.\n\nhttps://on.cypress.io/wait",
                "estack": "CypressError: Timed out retrying after 5000ms: `cy.wait()` timed out waiting `5000ms` for the 1st request to the route: `postOrgFail`. No request ever occurred.\n\nhttps://on.cypress.io/wait\n    at cypressErr (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:77535:18)\n    at Object.errByPath (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:77589:10)\n    at checkForXhr (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:138823:84)\n    at <unknown> (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:138849:28)\n    at tryCatcher (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise.attempt.Promise.try (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:4285:29)\n    at whenStable (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:147205:68)\n    at <unknown> (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:147146:14)\n    at tryCatcher (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise._settlePromiseFromHandler (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:1489:31)\n    at Promise._settlePromise (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:1546:18)\n    at Promise._settlePromise0 (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:1591:10)\n    at Promise._settlePromises (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:1671:18)\n    at Promise._fulfill (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:1615:18)\n    at <unknown> (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:5420:46)",
                "diff": null
              },
              "uuid": "e463e3f1-6b00-48f6-aa84-9ffafc23761e",
              "parentUUID": "8f482027-17c8-4c6e-97be-e8f0fd2b2178",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "83a07482-5af5-4cf8-bcb4-8e5b41880023",
            "1dfb7e2f-a4c2-422e-8ad4-e565a3bb763c",
            "9d66f705-cad8-4083-b554-2643ab334923",
            "d7a968af-83df-4e9e-bf5b-0510af8f270c",
            "25d871cb-e0c5-4594-aa33-7e6cc35cf063",
            "efaa09de-f24c-4a75-91dc-31548b489a98",
            "6e782a2d-29cd-4e71-89b6-3165cd1159fe",
            "43fd615d-c9e4-4924-8c0d-81b1e008b45f",
            "6599eec3-c7c1-4b5d-80b7-67d26825a9ac",
            "29238a12-6580-42e7-9cd2-2fa83b1b2c7d",
            "e5cb620e-feb5-42c4-991c-a03ed1ef63f4",
            "ed772b1c-c9ea-4a50-b47a-36097f1cb098",
            "222c03fe-f4ff-4264-a1b8-1e7e15c7960c",
            "e463e3f1-6b00-48f6-aa84-9ffafc23761e"
          ],
          "pending": [],
          "skipped": [],
          "duration": 188231,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "reports/create-organization reportFilename=create-organization overwrite=false json=true",
        "overwrite": false,
        "html": true,
        "json": true,
        "reportPageTitle": "User Form Test Report",
        "timestamp": "mmddyyyy_HHMMss"
      },
      "version": "6.2.0"
    }
  }
}