{
  "stats": {
    "suites": 1,
    "tests": 4,
    "passes": 0,
    "pending": 0,
    "failures": 4,
    "start": "2025-07-28T17:32:10.163Z",
    "end": "2025-07-28T17:34:40.463Z",
    "duration": 150300,
    "testsRegistered": 13,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 1,
    "hasOther": true,
    "skipped": 9,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "c51304b0-8ce5-4a5c-b2fd-87cf62653353",
      "title": "",
      "fullFile": "cypress\\e2e\\users.cy.js",
      "file": "cypress\\e2e\\users.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d0c4770f-7f77-4581-83b9-2c06e4942a78",
          "title": "Hydralytica v2 - Create User Validation Suite",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "‚úÖ should create a user with valid data",
              "fullTitle": "Hydralytica v2 - Create User Validation Suite ‚úÖ should create a user with valid data",
              "timedOut": null,
              "duration": 36517,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Fix: Match the actual request path seen in devtools\ncy.intercept('POST', '/api/v2/users/create').as('createUser');\nconst userData = fillForm();\ncy.contains('button', 'Create').click();\n// Wait for request to be triggered\n/*cy.wait('@createUser').then((interception) => {\n  expect(interception.response.statusCode).to.eq(201);\n  cy.log('User created:', interception.response.body);\n});*/\ncy.contains(_successMessages.successMessages.create, {\n  timeout: 10000\n}).should('be.visible');\ncy.screenshot(`user-created-${userData.email}`);",
              "err": {
                "message": "AssertionError: Timed out retrying after 10000ms: Expected to find content: 'Created successfully!' but never did.",
                "estack": "AssertionError: Timed out retrying after 10000ms: Expected to find content: 'Created successfully!' but never did.\n    at Context.eval (webpack://hydralytica-tests/./cypress/e2e/users.cy.js:121:58)",
                "diff": null
              },
              "uuid": "aba85ac6-d5a8-4789-8cab-4f68a60462f7",
              "parentUUID": "d0c4770f-7f77-4581-83b9-2c06e4942a78",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "üìß should allow adding multiple contact methods",
              "fullTitle": "Hydralytica v2 - Create User Validation Suite üìß should allow adding multiple contact methods",
              "timedOut": null,
              "duration": 25451,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const userData = fillForm();\n// Add second contact\ncy.contains('label', 'Contact Type').parent().find('button[role=\"combobox\"]').click();\ncy.wait(500);\ncy.get('[role=\"option\"]').contains(/^Phone$/).click();\ncy.get('input[name=\"contactFields.contact\"]').clear().type('+1-416-123-4567');\ncy.get('textarea[name=\"contactFields.description\"]').type('Mobile number');\ncy.contains('div[data-slot=\"card-title\"]', 'Contact').parents('[data-slot=\"card\"]').within(() => {\n  cy.contains('button', 'Add').should('be.visible').click();\n});\ncy.contains('button', 'Create').click();\ncy.contains(_successMessages.successMessages.create).should('exist');",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find content: '/^Phone$/' within the element: <div.focus:bg-accent.focus:text-accent-foreground.[&_svg:not([class*='text-'])]:text-muted-foreground.relative.flex.w-full.cursor-default.items-center.gap-2.rounded-sm.py-1.5.pr-8.pl-2.text-sm.outline-hidden.select-none.data-[disabled]:pointer-events-none.data-[disabled]:opacity-50.[&_svg]:pointer-events-none.[&_svg]:shrink-0.[&_svg:not([class*='size-'])]:size-4.*:[span]:last:flex.*:[span]:last:items-center.*:[span]:last:gap-2> but never did.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find content: '/^Phone$/' within the element: <div.focus:bg-accent.focus:text-accent-foreground.[&_svg:not([class*='text-'])]:text-muted-foreground.relative.flex.w-full.cursor-default.items-center.gap-2.rounded-sm.py-1.5.pr-8.pl-2.text-sm.outline-hidden.select-none.data-[disabled]:pointer-events-none.data-[disabled]:opacity-50.[&_svg]:pointer-events-none.[&_svg]:shrink-0.[&_svg:not([class*='size-'])]:size-4.*:[span]:last:flex.*:[span]:last:items-center.*:[span]:last:gap-2> but never did.\n    at Context.eval (webpack://hydralytica-tests/./cypress/e2e/users.cy.js:149:28)",
                "diff": null
              },
              "uuid": "c63cb883-1cbd-470f-8965-abfd9c44ae27",
              "parentUUID": "d0c4770f-7f77-4581-83b9-2c06e4942a78",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "‚ö†Ô∏è should reject invalid characters in address fields",
              "fullTitle": "Hydralytica v2 - Create User Validation Suite ‚ö†Ô∏è should reject invalid characters in address fields",
              "timedOut": null,
              "duration": 25178,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "fillForm({\n  address: 'üè†<>/\\\\',\n  city: '<Toronto>'\n});\ncy.contains('button', 'Create').click();\ncy.contains('Invalid characters').should('exist');",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Invalid characters' but never did.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Invalid characters' but never did.\n    at Context.eval (webpack://hydralytica-tests/./cypress/e2e/users.cy.js:171:36)",
                "diff": null
              },
              "uuid": "b37ef72d-e19e-4a51-b3c0-69b97539bc56",
              "parentUUID": "d0c4770f-7f77-4581-83b9-2c06e4942a78",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "üö´ should not allow duplicate contact entry",
              "fullTitle": "Hydralytica v2 - Create User Validation Suite üö´ should not allow duplicate contact entry",
              "timedOut": null,
              "duration": 31820,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const data = fillForm();\n// Try to re-add the same email\ncy.contains('label', 'Contact Type').parent().find('button[role=\"combobox\"]').click();\ncy.wait(500);\ncy.get('[role=\"option\"]').contains(/^Login Email \\(Required\\)$/).click();\ncy.get('input[name=\"contactFields.contact\"]').clear().type(data.email);\ncy.get('textarea[name=\"contactFields.description\"]').type('Duplicate email');\ncy.contains('div[data-slot=\"card-title\"]', 'Contact').parents('[data-slot=\"card\"]').within(() => {\n  cy.contains('button', 'Add').should('be.visible').click();\n});\ncy.contains('Duplicate contact entry').should('exist');",
              "err": {
                "message": "CypressError: `cy.screenshot()` timed out waiting `30000ms` to complete.\n\nhttps://on.cypress.io/screenshot\n\nBecause this error occurred during a `after each` hook we are skipping the remaining tests in the current suite: `Hydralytica v2 - Create Use...`",
                "estack": "CypressError: `cy.screenshot()` timed out waiting `30000ms` to complete.\n\nhttps://on.cypress.io/screenshot\n\nBecause this error occurred during a `after each` hook we are skipping the remaining tests in the current suite: `Hydralytica v2 - Create Use...`\n    at <unknown> (https://hydralytica.com/__cypress/runner/cypress_runner.js:137654:73)\n    at tryCatcher (https://hydralytica.com/__cypress/runner/cypress_runner.js:1777:23)\n    at <unknown> (https://hydralytica.com/__cypress/runner/cypress_runner.js:4156:41)\n    at tryCatcher (https://hydralytica.com/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise._settlePromiseFromHandler (https://hydralytica.com/__cypress/runner/cypress_runner.js:1489:31)\n    at Promise._settlePromise (https://hydralytica.com/__cypress/runner/cypress_runner.js:1546:18)\n    at Promise._settlePromise0 (https://hydralytica.com/__cypress/runner/cypress_runner.js:1591:10)\n    at Promise._settlePromises (https://hydralytica.com/__cypress/runner/cypress_runner.js:1667:18)\n    at _drainQueueStep (https://hydralytica.com/__cypress/runner/cypress_runner.js:2377:12)\n    at _drainQueue (https://hydralytica.com/__cypress/runner/cypress_runner.js:2370:9)\n    at Async._drainQueues (https://hydralytica.com/__cypress/runner/cypress_runner.js:2386:5)\n    at Async.drainQueues (https://hydralytica.com/__cypress/runner/cypress_runner.js:2256:14)",
                "diff": null
              },
              "uuid": "646997aa-2cc1-4b45-8932-093c748d6ea1",
              "parentUUID": "d0c4770f-7f77-4581-83b9-2c06e4942a78",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "üß™ should handle long input edge cases",
              "fullTitle": "Hydralytica v2 - Create User Validation Suite üß™ should handle long input edge cases",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const longStr = 'A'.repeat(256);\nfillForm({\n  name: longStr,\n  lastName: longStr,\n  nickname: longStr\n});\ncy.wait(500);\ncy.contains('button', 'Create').click();\n// Temporary fallback for backend message\ncy.contains('forms.validations.fieldIsTooLong').should('exist');\ncy.contains(_errorMessages.validationErrors.tooLong).should('exist');",
              "err": {},
              "uuid": "0ac8e035-4dc3-40e9-9a8d-cb2fb6a37b99",
              "parentUUID": "d0c4770f-7f77-4581-83b9-2c06e4942a78",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "‚ùå should show errors for missing required fields",
              "fullTitle": "Hydralytica v2 - Create User Validation Suite ‚ùå should show errors for missing required fields",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(500);\ncy.contains('button', 'Create').click();\ncy.get('[data-slot=\"form-message\"]').should('have.length.at.least', 2).each($el => {\n  cy.wrap($el).should('contain.text', _errorMessages.validationErrors.required);\n});\n(0, _utils.logTestResult)('Show errors for missing required fields', 'pass');",
              "err": {},
              "uuid": "d7b90684-3f02-445d-994f-bcf0348df189",
              "parentUUID": "d0c4770f-7f77-4581-83b9-2c06e4942a78",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "‚ùå should reject invalid email format",
              "fullTitle": "Hydralytica v2 - Create User Validation Suite ‚ùå should reject invalid email format",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fillForm({\n  email: 'invalidemail'\n});\ncy.wait(500);\ncy.contains('button', 'Create').click();\ncy.contains(_errorMessages.validationErrors.email).should('exist');",
              "err": {},
              "uuid": "6b316546-09fd-4d7b-8d37-dbe7e9a03186",
              "parentUUID": "d0c4770f-7f77-4581-83b9-2c06e4942a78",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "‚ùå should reject SQL injection attempt in name field",
              "fullTitle": "Hydralytica v2 - Create User Validation Suite ‚ùå should reject SQL injection attempt in name field",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fillForm({\n  name: \"'; DROP TABLE users; --\"\n});\ncy.wait(500);\ncy.contains('button', 'Create').click();\ncy.contains('Invalid characters').should('exist');",
              "err": {},
              "uuid": "c0f14be1-6186-4269-9f2c-e886d7563883",
              "parentUUID": "d0c4770f-7f77-4581-83b9-2c06e4942a78",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "‚ùå should reject XSS injection in nickname field",
              "fullTitle": "Hydralytica v2 - Create User Validation Suite ‚ùå should reject XSS injection in nickname field",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fillForm({\n  nickname: '<script>alert(1)</script>'\n});\ncy.wait(500);\ncy.contains('button', 'Create').click();\ncy.contains('Invalid input').should('exist');",
              "err": {},
              "uuid": "306480e4-9f66-4b36-8c3a-b7d8301d03a4",
              "parentUUID": "d0c4770f-7f77-4581-83b9-2c06e4942a78",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "‚ùå should reject duplicate email address",
              "fullTitle": "Hydralytica v2 - Create User Validation Suite ‚ùå should reject duplicate email address",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fillForm({\n  email: duplicateEmail\n});\ncy.wait(500);\ncy.contains('button', 'Create').click();\ncy.contains(_successMessages.successMessages.create).should('exist');\ncy.wait(2000);\ncy.visit('/users/create');\nfillForm({\n  email: duplicateEmail\n});\ncy.wait(500);\ncy.contains('button', 'Create').click();\ncy.contains('Error creating resource').should('exist');",
              "err": {},
              "uuid": "0aad9606-ce85-4145-9730-98719480cfb1",
              "parentUUID": "d0c4770f-7f77-4581-83b9-2c06e4942a78",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "‚ûï should allow adding multiple addresses",
              "fullTitle": "Hydralytica v2 - Create User Validation Suite ‚ûï should allow adding multiple addresses",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const userData = fillForm();\n// Add second address\ncy.contains('label', 'Address Type').parent().find('button[role=\"combobox\"]').click();\ncy.wait(500);\ncy.get('[role=\"option\"]').contains(/^Business$/).click();\ncy.get('input[name=\"addressFields.country\"]').clear().type('USA');\ncy.get('input[name=\"addressFields.city\"]').clear().type('New York');\ncy.get('input[name=\"addressFields.address\"]').clear().type('456 Wall St');\ncy.get('input[name=\"addressFields.zipCode\"]').clear().type('10005');\ncy.get('input[name=\"addressFields.reference\"]').type('HQ');\ncy.get('input[name=\"addressFields.description\"]').type('Secondary address');\n// Click Add for second address\ncy.contains('div[data-slot=\"card-title\"]', 'Address').parents('[data-slot=\"card\"]').within(() => {\n  cy.contains('button', 'Add').should('be.visible').click();\n});\ncy.contains('button', 'Create').click();\ncy.contains(_successMessages.successMessages.create).should('exist');",
              "err": {},
              "uuid": "8c076f4d-9bd8-403f-acba-9eff6fa30b0b",
              "parentUUID": "d0c4770f-7f77-4581-83b9-2c06e4942a78",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "üß± should reject overly long address fields",
              "fullTitle": "Hydralytica v2 - Create User Validation Suite üß± should reject overly long address fields",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fillForm({\n  address: 'A'.repeat(300),\n  city: 'B'.repeat(300),\n  zipCode: 'C'.repeat(100)\n});\ncy.contains('button', 'Create').click();\ncy.contains(_errorMessages.validationErrors.tooLong).should('exist');",
              "err": {},
              "uuid": "79b8c7b7-44f0-477f-b305-dfb78ee290e9",
              "parentUUID": "d0c4770f-7f77-4581-83b9-2c06e4942a78",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "‚úÖ should allow address creation without reference/description",
              "fullTitle": "Hydralytica v2 - Create User Validation Suite ‚úÖ should allow address creation without reference/description",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const data = generateUniqueData();\n// Fill only required address fields\ncy.get('input[name=\"addressFields.country\"]').clear().type('Canada');\ncy.get('input[name=\"addressFields.city\"]').clear().type('Toronto');\ncy.get('input[name=\"addressFields.address\"]').clear().type('123 King St');\ncy.get('input[name=\"addressFields.zipCode\"]').clear().type('M5V1K4');\ncy.contains('div[data-slot=\"card-title\"]', 'Address').parents('[data-slot=\"card\"]').within(() => {\n  cy.contains('button', 'Add').should('be.visible').click();\n});\ncy.contains('button', 'Create').click();\ncy.contains(_successMessages.successMessages.create).should('exist');",
              "err": {},
              "uuid": "47ba4ae1-2933-4a2a-b9dc-baaa9dfa485b",
              "parentUUID": "d0c4770f-7f77-4581-83b9-2c06e4942a78",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "aba85ac6-d5a8-4789-8cab-4f68a60462f7",
            "c63cb883-1cbd-470f-8965-abfd9c44ae27",
            "b37ef72d-e19e-4a51-b3c0-69b97539bc56",
            "646997aa-2cc1-4b45-8932-093c748d6ea1"
          ],
          "pending": [],
          "skipped": [
            "0ac8e035-4dc3-40e9-9a8d-cb2fb6a37b99",
            "d7b90684-3f02-445d-994f-bcf0348df189",
            "6b316546-09fd-4d7b-8d37-dbe7e9a03186",
            "c0f14be1-6186-4269-9f2c-e886d7563883",
            "306480e4-9f66-4b36-8c3a-b7d8301d03a4",
            "0aad9606-ce85-4145-9730-98719480cfb1",
            "8c076f4d-9bd8-403f-acba-9eff6fa30b0b",
            "79b8c7b7-44f0-477f-b305-dfb78ee290e9",
            "47ba4ae1-2933-4a2a-b9dc-baaa9dfa485b"
          ],
          "duration": 118966,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "users",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "reports/users",
        "overwrite": false,
        "html": true,
        "json": true,
        "reportPageTitle": "User Form Test Report",
        "timestamp": "mmddyyyy_HHMMss",
        "reportFilename": "users"
      },
      "version": "6.2.0"
    }
  }
}