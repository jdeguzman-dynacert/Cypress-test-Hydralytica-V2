{
  "stats": {
    "suites": 1,
    "tests": 15,
    "passes": 1,
    "pending": 0,
    "failures": 14,
    "start": "2025-08-18T20:54:54.834Z",
    "end": "2025-08-18T20:58:18.624Z",
    "duration": 203790,
    "testsRegistered": 15,
    "passPercent": 6.666666666666667,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "b4789b65-6659-45e5-b057-e8892a954400",
      "title": "",
      "fullFile": "cypress\\e2e\\create_organization.cy.js",
      "file": "cypress\\e2e\\create_organization.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c6199beb-6f11-4322-ae36-8c4867454d19",
          "title": "Hydralytica v2 - Create Organization with Extensive Validations",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "creates a new organization with valid inputs",
              "fullTitle": "Hydralytica v2 - Create Organization with Extensive Validations creates a new organization with valid inputs",
              "timedOut": null,
              "duration": 37896,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "try {\n  cy.get('input[name=\"name\"]').clear().type(uniqueOrgName);\n  cy.get('select[aria-hidden=\"true\"]').eq(0).select('Corporate', {\n    force: true\n  });\n  cy.get('select[aria-hidden=\"true\"]').eq(1).find('option').contains('dynaCERT Inc.').then($option => {\n    cy.get('select[aria-hidden=\"true\"]').eq(1).select($option.attr('value'), {\n      force: true\n    });\n  });\n  cy.get('textarea[name=\"notes\"]').clear().type('Test org created by Cypress.');\n  cy.get('input[name=\"contactFields.contact\"]').clear().type(uniqueEmail);\n  cy.get('textarea[name=\"contactFields.description\"]').clear().type('Main contact email.');\n  // ✅ First Add button → contact\n  cy.contains('button', 'Add').eq(0).click({\n    force: true\n  });\n  // Address fields\n  cy.get('input[name=\"addressFields.country\"]').clear().type('Canada');\n  cy.get('input[name=\"addressFields.city\"]').clear().type('Toronto');\n  cy.get('input[name=\"addressFields.address\"]').clear().type('123 Queen Street');\n  cy.get('input[name=\"addressFields.zipCode\"]').clear().type('M5H 2N2');\n  cy.get('input[name=\"addressFields.reference\"]').clear().type('Suite 500');\n  cy.get('input[name=\"addressFields.description\"]').clear().type('Head office location.');\n  // ✅ Last Add button → address\n  cy.contains('div[data-slot=\"card-title\"]', 'Address').parents('[data-slot=\"card\"]').within(() => {\n    cy.contains('button', 'Add').last().click();\n  });\n  cy.contains('button', 'Create', {\n    timeout: 10000\n  }).click();\n  cy.contains(_successMessages.successMessages.create, {\n    timeout: 10000\n  }).should('be.visible');\n  (0, _utils.logTestResult)('creates a new organization with valid inputs', 'pass');\n} catch (e) {\n  (0, _utils.logTestResult)('creates a new organization with valid inputs', 'fail');\n  throw e;\n}",
              "err": {
                "message": "AssertionError: Timed out retrying after 10000ms: Expected to find content: 'Created successfully!' but never did.",
                "estack": "AssertionError: Timed out retrying after 10000ms: Expected to find content: 'Created successfully!' but never did.\n    at Context.eval (webpack://hydralytica-tests/./cypress/e2e/create_organization.cy.js:89:62)",
                "diff": null
              },
              "uuid": "4cb4b1d9-76b0-4b28-a9ab-3c9c82998bed",
              "parentUUID": "c6199beb-6f11-4322-ae36-8c4867454d19",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "rejects overly long organization name",
              "fullTitle": "Hydralytica v2 - Create Organization with Extensive Validations rejects overly long organization name",
              "timedOut": null,
              "duration": 34747,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  const longName = 'A'.repeat(256);\n  cy.get('input[name=\"name\"]').clear().type(longName);\n  cy.contains('button', 'Create', {\n    timeout: 10000\n  }).click();\n  cy.contains(_errorMessages.validationErrors.tooLong).should('be.visible');\n  (0, _utils.logTestResult)('rejects overly long organization name', 'pass');\n} catch (e) {\n  (0, _utils.logTestResult)('rejects overly long organization name', 'fail');\n  throw e;\n}",
              "err": {},
              "uuid": "d5062018-ee8b-4694-ac95-c2db890dfbed",
              "parentUUID": "c6199beb-6f11-4322-ae36-8c4867454d19",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "rejects overly short organization name",
              "fullTitle": "Hydralytica v2 - Create Organization with Extensive Validations rejects overly short organization name",
              "timedOut": null,
              "duration": 9811,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "try {\n  cy.get('input[name=\"name\"]').clear().type('A');\n  cy.contains('button', 'Create', {\n    timeout: 10000\n  }).click();\n  cy.contains(_errorMessages.validationErrors.tooShort).should('be.visible');\n  (0, _utils.logTestResult)('rejects overly short organization name', 'pass');\n} catch (e) {\n  (0, _utils.logTestResult)('rejects overly short organization name', 'fail');\n  throw e;\n}",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Must be at least 2 characters' but never did.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Must be at least 2 characters' but never did.\n    at Context.eval (webpack://hydralytica-tests/./cypress/e2e/create_organization.cy.js:117:45)",
                "diff": null
              },
              "uuid": "f82ce0e8-5fcc-466b-8242-ca5e39638b5b",
              "parentUUID": "c6199beb-6f11-4322-ae36-8c4867454d19",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "rejects SQL injection attempt in organization name",
              "fullTitle": "Hydralytica v2 - Create Organization with Extensive Validations rejects SQL injection attempt in organization name",
              "timedOut": null,
              "duration": 10852,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "try {\n  const maliciousInput = \"' OR 1=1 --\";\n  cy.get('input[name=\"name\"]').clear().type(maliciousInput);\n  cy.contains('button', 'Create', {\n    timeout: 1000\n  }).click();\n  cy.contains(_errorMessages.validationErrors.invalidCharacters).should('be.visible');\n  (0, _utils.logTestResult)('rejects SQL injection attempt in organization name', 'pass');\n} catch (e) {\n  (0, _utils.logTestResult)('rejects SQL injection attempt in organization name', 'fail');\n  throw e;\n}",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Contains invalid characters' but never did.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Contains invalid characters' but never did.\n    at Context.eval (webpack://hydralytica-tests/./cypress/e2e/create_organization.cy.js:131:54)",
                "diff": null
              },
              "uuid": "0c27949b-334e-41b6-bfca-60b32a93fd4d",
              "parentUUID": "c6199beb-6f11-4322-ae36-8c4867454d19",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "rejects XSS attempt in notes field",
              "fullTitle": "Hydralytica v2 - Create Organization with Extensive Validations rejects XSS attempt in notes field",
              "timedOut": null,
              "duration": 12494,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "try {\n  const xssInput = \"<script>alert('xss')</script>\";\n  cy.get('textarea[name=\"notes\"]').clear().type(xssInput);\n  cy.contains('button', 'Create', {\n    timeout: 1000\n  }).click();\n  cy.contains(_errorMessages.validationErrors.invalidCharacters).should('be.visible');\n  (0, _utils.logTestResult)('rejects XSS attempt in notes field', 'pass');\n} catch (e) {\n  (0, _utils.logTestResult)('rejects XSS attempt in notes field', 'fail');\n  throw e;\n}",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Contains invalid characters' but never did.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Contains invalid characters' but never did.\n    at Context.eval (webpack://hydralytica-tests/./cypress/e2e/create_organization.cy.js:145:54)",
                "diff": null
              },
              "uuid": "9f4590a7-6b10-4f9c-8351-23de1c0fd88f",
              "parentUUID": "c6199beb-6f11-4322-ae36-8c4867454d19",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "rejects invalid email: plainaddress",
              "fullTitle": "Hydralytica v2 - Create Organization with Extensive Validations rejects invalid email: plainaddress",
              "timedOut": null,
              "duration": 8926,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "try {\n  cy.get('input[name=\"contactFields.contact\"]').clear().type(email);\n  cy.contains('button', 'Add').eq(0).click(); // trigger validation\n  cy.contains(_errorMessages.validationErrors.emailInvalid).should('be.visible');\n  (0, _utils.logTestResult)(`rejects invalid email: ${email}`, 'pass');\n} catch (e) {\n  (0, _utils.logTestResult)(`rejects invalid email: ${email}`, 'fail');\n  throw e;\n}",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Email is invalid' but never did.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Email is invalid' but never did.\n    at Context.eval (webpack://hydralytica-tests/./cypress/e2e/create_organization.cy.js:167:51)",
                "diff": null
              },
              "uuid": "3afeb39e-56a7-4f08-8813-90833a78c054",
              "parentUUID": "c6199beb-6f11-4322-ae36-8c4867454d19",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "rejects invalid email: @missingusername.com",
              "fullTitle": "Hydralytica v2 - Create Organization with Extensive Validations rejects invalid email: @missingusername.com",
              "timedOut": null,
              "duration": 9108,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "try {\n  cy.get('input[name=\"contactFields.contact\"]').clear().type(email);\n  cy.contains('button', 'Add').eq(0).click(); // trigger validation\n  cy.contains(_errorMessages.validationErrors.emailInvalid).should('be.visible');\n  (0, _utils.logTestResult)(`rejects invalid email: ${email}`, 'pass');\n} catch (e) {\n  (0, _utils.logTestResult)(`rejects invalid email: ${email}`, 'fail');\n  throw e;\n}",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Email is invalid' but never did.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Email is invalid' but never did.\n    at Context.eval (webpack://hydralytica-tests/./cypress/e2e/create_organization.cy.js:167:51)",
                "diff": null
              },
              "uuid": "b1b9633a-4fd2-4ce0-a977-bd9438dee102",
              "parentUUID": "c6199beb-6f11-4322-ae36-8c4867454d19",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "rejects invalid email: username@.com",
              "fullTitle": "Hydralytica v2 - Create Organization with Extensive Validations rejects invalid email: username@.com",
              "timedOut": null,
              "duration": 8601,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "try {\n  cy.get('input[name=\"contactFields.contact\"]').clear().type(email);\n  cy.contains('button', 'Add').eq(0).click(); // trigger validation\n  cy.contains(_errorMessages.validationErrors.emailInvalid).should('be.visible');\n  (0, _utils.logTestResult)(`rejects invalid email: ${email}`, 'pass');\n} catch (e) {\n  (0, _utils.logTestResult)(`rejects invalid email: ${email}`, 'fail');\n  throw e;\n}",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Email is invalid' but never did.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Email is invalid' but never did.\n    at Context.eval (webpack://hydralytica-tests/./cypress/e2e/create_organization.cy.js:167:51)",
                "diff": null
              },
              "uuid": "c17818f3-63c1-4500-829f-8978f79f0e40",
              "parentUUID": "c6199beb-6f11-4322-ae36-8c4867454d19",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "rejects invalid email: user name@example.com",
              "fullTitle": "Hydralytica v2 - Create Organization with Extensive Validations rejects invalid email: user name@example.com",
              "timedOut": null,
              "duration": 8644,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "try {\n  cy.get('input[name=\"contactFields.contact\"]').clear().type(email);\n  cy.contains('button', 'Add').eq(0).click(); // trigger validation\n  cy.contains(_errorMessages.validationErrors.emailInvalid).should('be.visible');\n  (0, _utils.logTestResult)(`rejects invalid email: ${email}`, 'pass');\n} catch (e) {\n  (0, _utils.logTestResult)(`rejects invalid email: ${email}`, 'fail');\n  throw e;\n}",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Email is invalid' but never did.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Email is invalid' but never did.\n    at Context.eval (webpack://hydralytica-tests/./cypress/e2e/create_organization.cy.js:167:51)",
                "diff": null
              },
              "uuid": "77e7134e-af88-435c-8234-cc8d6286a363",
              "parentUUID": "c6199beb-6f11-4322-ae36-8c4867454d19",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "rejects invalid email: username@example..com",
              "fullTitle": "Hydralytica v2 - Create Organization with Extensive Validations rejects invalid email: username@example..com",
              "timedOut": null,
              "duration": 9073,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "try {\n  cy.get('input[name=\"contactFields.contact\"]').clear().type(email);\n  cy.contains('button', 'Add').eq(0).click(); // trigger validation\n  cy.contains(_errorMessages.validationErrors.emailInvalid).should('be.visible');\n  (0, _utils.logTestResult)(`rejects invalid email: ${email}`, 'pass');\n} catch (e) {\n  (0, _utils.logTestResult)(`rejects invalid email: ${email}`, 'fail');\n  throw e;\n}",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Email is invalid' but never did.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Email is invalid' but never did.\n    at Context.eval (webpack://hydralytica-tests/./cypress/e2e/create_organization.cy.js:167:51)",
                "diff": null
              },
              "uuid": "34a4a5ef-4f39-400a-988d-b7e5775a1c18",
              "parentUUID": "c6199beb-6f11-4322-ae36-8c4867454d19",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "displays validation errors for empty required fields",
              "fullTitle": "Hydralytica v2 - Create Organization with Extensive Validations displays validation errors for empty required fields",
              "timedOut": null,
              "duration": 8345,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "try {\n  cy.get('input[name=\"name\"]').clear();\n  cy.contains('button', 'Add').eq(0).click(); // trigger validation\n  cy.contains(_errorMessages.validationErrors.orgNameRequired).should('be.visible');\n  cy.get('input[name=\"contactFields.contact\"]').clear();\n  cy.contains('button', 'Add').eq(0).click(); // trigger validation\n  cy.contains(_errorMessages.validationErrors.emailRequired).should('be.visible');\n  (0, _utils.logTestResult)('displays validation errors for empty required fields', 'pass');\n} catch (e) {\n  (0, _utils.logTestResult)('displays validation errors for empty required fields', 'fail');\n  throw e;\n}",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Organization name is required' but never did.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Organization name is required' but never did.\n    at Context.eval (webpack://hydralytica-tests/./cypress/e2e/create_organization.cy.js:181:52)",
                "diff": null
              },
              "uuid": "b296ff4d-da11-4d02-9082-03a6076e1b48",
              "parentUUID": "c6199beb-6f11-4322-ae36-8c4867454d19",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "shows error when no contact is added",
              "fullTitle": "Hydralytica v2 - Create Organization with Extensive Validations shows error when no contact is added",
              "timedOut": null,
              "duration": 8695,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "try {\n  cy.contains('button', 'Add').eq(0).click(); // first Add button\n  cy.contains(_errorMessages.validationErrors.contactIsRequired).should('be.visible');\n  (0, _utils.logTestResult)('shows error when no contact is added', 'pass');\n} catch (e) {\n  (0, _utils.logTestResult)('shows error when no contact is added', 'fail');\n  throw e;\n}",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'At least one contact is required' but never did.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'At least one contact is required' but never did.\n    at Context.eval (webpack://hydralytica-tests/./cypress/e2e/create_organization.cy.js:198:54)",
                "diff": null
              },
              "uuid": "7bad207d-45b1-40fd-b3bf-49e42d4556dd",
              "parentUUID": "c6199beb-6f11-4322-ae36-8c4867454d19",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "shows error when no address is added",
              "fullTitle": "Hydralytica v2 - Create Organization with Extensive Validations shows error when no address is added",
              "timedOut": null,
              "duration": 8407,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "try {\n  cy.contains('div[data-slot=\"card-title\"]', 'Address').parents('[data-slot=\"card\"]').within(() => {\n    cy.contains('button', 'Add').last().click(); // last Add button\n  });\n  cy.contains(_errorMessages.validationErrors.addressIsRequired).should('be.visible');\n  (0, _utils.logTestResult)('shows error when no address is added', 'pass');\n} catch (e) {\n  (0, _utils.logTestResult)('shows error when no address is added', 'fail');\n  throw e;\n}",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'At least one address is required' but never did.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'At least one address is required' but never did.\n    at Context.eval (webpack://hydralytica-tests/./cypress/e2e/create_organization.cy.js:215:54)",
                "diff": null
              },
              "uuid": "863e393f-de8e-47e3-b64e-42ff465334dd",
              "parentUUID": "c6199beb-6f11-4322-ae36-8c4867454d19",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "displays error message on server failure",
              "fullTitle": "Hydralytica v2 - Create Organization with Extensive Validations displays error message on server failure",
              "timedOut": null,
              "duration": 16159,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "try {\n  cy.intercept('POST', '/organizations', {\n    statusCode: 500,\n    body: {\n      error: 'Internal Server Error'\n    }\n  }).as('postOrgFail');\n  cy.get('input[name=\"name\"]').clear().type(uniqueOrgName);\n  cy.get('input[name=\"contactFields.contact\"]').clear().type(uniqueEmail);\n  cy.get('select[aria-hidden=\"true\"]').eq(0).select('Corporate', {\n    force: true\n  });\n  cy.get('select[aria-hidden=\"true\"]').eq(1).find('option').contains('dynaCERT Inc.').then($option => {\n    cy.get('select[aria-hidden=\"true\"]').eq(1).select($option.attr('value'), {\n      force: true\n    });\n  });\n  cy.contains('button', 'Create').click();\n  cy.wait('@postOrgFail');\n  cy.contains(_errorMessages.statusErrors.create).should('be.visible');\n  (0, _utils.logTestResult)('displays error message on server failure', 'pass');\n} catch (e) {\n  (0, _utils.logTestResult)('displays error message on server failure', 'fail');\n  throw e;\n}",
              "err": {
                "message": "CypressError: Timed out retrying after 5000ms: `cy.wait()` timed out waiting `5000ms` for the 1st request to the route: `postOrgFail`. No request ever occurred.\n\nhttps://on.cypress.io/wait",
                "estack": "CypressError: Timed out retrying after 5000ms: `cy.wait()` timed out waiting `5000ms` for the 1st request to the route: `postOrgFail`. No request ever occurred.\n\nhttps://on.cypress.io/wait\n    at cypressErr (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:77535:18)\n    at Object.errByPath (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:77589:10)\n    at checkForXhr (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:138823:84)\n    at <unknown> (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:138849:28)\n    at tryCatcher (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise.attempt.Promise.try (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:4285:29)\n    at whenStable (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:147205:68)\n    at <unknown> (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:147146:14)\n    at tryCatcher (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise._settlePromiseFromHandler (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:1489:31)\n    at Promise._settlePromise (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:1546:18)\n    at Promise._settlePromise0 (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:1591:10)\n    at Promise._settlePromises (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:1671:18)\n    at Promise._fulfill (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:1615:18)\n    at <unknown> (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:5420:46)",
                "diff": null
              },
              "uuid": "5a419a2b-7699-46d5-a155-df262b24fab2",
              "parentUUID": "c6199beb-6f11-4322-ae36-8c4867454d19",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "resets form when clicking Cancel",
              "fullTitle": "Hydralytica v2 - Create Organization with Extensive Validations resets form when clicking Cancel",
              "timedOut": null,
              "duration": 10487,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "try {\n  cy.get('input[name=\"name\"]').clear().type('Temp Org');\n  cy.get('input[name=\"contactFields.contact\"]').clear().type('temp@example.com');\n  cy.contains('button', 'Cancel').click();\n  cy.get('input[name=\"name\"]').should('have.value', '');\n  cy.get('input[name=\"contactFields.contact\"]').should('have.value', '');\n  (0, _utils.logTestResult)('resets form when clicking Cancel', 'pass');\n} catch (e) {\n  (0, _utils.logTestResult)('resets form when clicking Cancel', 'fail');\n  throw e;\n}",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `input[name=\"name\"]`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `input[name=\"name\"]`, but never found it.\n    at Context.eval (webpack://hydralytica-tests/./cypress/e2e/create_organization.cy.js:257:35)",
                "diff": null
              },
              "uuid": "67c7053f-02cb-4695-8e34-ed5de38a5c49",
              "parentUUID": "c6199beb-6f11-4322-ae36-8c4867454d19",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d5062018-ee8b-4694-ac95-c2db890dfbed"
          ],
          "failures": [
            "4cb4b1d9-76b0-4b28-a9ab-3c9c82998bed",
            "f82ce0e8-5fcc-466b-8242-ca5e39638b5b",
            "0c27949b-334e-41b6-bfca-60b32a93fd4d",
            "9f4590a7-6b10-4f9c-8351-23de1c0fd88f",
            "3afeb39e-56a7-4f08-8813-90833a78c054",
            "b1b9633a-4fd2-4ce0-a977-bd9438dee102",
            "c17818f3-63c1-4500-829f-8978f79f0e40",
            "77e7134e-af88-435c-8234-cc8d6286a363",
            "34a4a5ef-4f39-400a-988d-b7e5775a1c18",
            "b296ff4d-da11-4d02-9082-03a6076e1b48",
            "7bad207d-45b1-40fd-b3bf-49e42d4556dd",
            "863e393f-de8e-47e3-b64e-42ff465334dd",
            "5a419a2b-7699-46d5-a155-df262b24fab2",
            "67c7053f-02cb-4695-8e34-ed5de38a5c49"
          ],
          "pending": [],
          "skipped": [],
          "duration": 202245,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "create-organization-[datetime]",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "reports/create-organization",
        "overwrite": false,
        "html": true,
        "json": true,
        "reportPageTitle": "User Form Test Report",
        "timestamp": "mmddyyyy_HHMMss",
        "reportFilename": "create-organization-[datetime]"
      },
      "version": "6.2.0"
    }
  }
}