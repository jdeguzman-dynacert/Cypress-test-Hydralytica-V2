{
  "stats": {
    "suites": 1,
    "tests": 5,
    "passes": 1,
    "pending": 0,
    "failures": 4,
    "start": "2025-08-18T20:35:16.301Z",
    "end": "2025-08-18T20:37:30.119Z",
    "duration": 133818,
    "testsRegistered": 15,
    "passPercent": 6.666666666666667,
    "pendingPercent": 0,
    "other": 1,
    "hasOther": true,
    "skipped": 10,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "72af721d-8708-4fc2-a884-fa695218da89",
      "title": "",
      "fullFile": "cypress\\e2e\\create_organization.cy.js",
      "file": "cypress\\e2e\\create_organization.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7659c348-f653-457f-bdb8-10be99012663",
          "title": "Hydralytica v2 - Create Organization with Extensive Validations",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "creates a new organization with valid inputs",
              "fullTitle": "Hydralytica v2 - Create Organization with Extensive Validations creates a new organization with valid inputs",
              "timedOut": null,
              "duration": 37213,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "try {\n  cy.get('input[name=\"name\"]').clear().type(uniqueOrgName);\n  cy.get('select[aria-hidden=\"true\"]').eq(0).select('Corporate', {\n    force: true\n  });\n  cy.get('select[aria-hidden=\"true\"]').eq(1).find('option').contains('dynaCERT Inc.').then($option => {\n    cy.get('select[aria-hidden=\"true\"]').eq(1).select($option.attr('value'), {\n      force: true\n    });\n  });\n  cy.get('textarea[name=\"notes\"]').clear().type('Test org created by Cypress.');\n  cy.get('input[name=\"contactFields.contact\"]').clear().type(uniqueEmail);\n  cy.get('textarea[name=\"contactFields.description\"]').clear().type('Main contact email.');\n  // ✅ First Add button → contact\n  cy.contains('button', 'Add').eq(0).click({\n    force: true\n  });\n  // Address fields\n  cy.get('input[name=\"addressFields.country\"]').clear().type('Canada');\n  cy.get('input[name=\"addressFields.city\"]').clear().type('Toronto');\n  cy.get('input[name=\"addressFields.address\"]').clear().type('123 Queen Street');\n  cy.get('input[name=\"addressFields.zipCode\"]').clear().type('M5H 2N2');\n  cy.get('input[name=\"addressFields.reference\"]').clear().type('Suite 500');\n  cy.get('input[name=\"addressFields.description\"]').clear().type('Head office location.');\n  // ✅ Last Add button → address\n  cy.contains('div[data-slot=\"card-title\"]', 'Address').parents('[data-slot=\"card\"]').within(() => {\n    cy.contains('button', 'Add').last().click();\n  });\n  cy.contains('button', 'Create', {\n    timeout: 10000\n  }).click();\n  cy.contains(_successMessages.successMessages.create, {\n    timeout: 10000\n  }).should('be.visible');\n  (0, _utils.logTestResult)('creates a new organization with valid inputs', 'pass');\n} catch (e) {\n  (0, _utils.logTestResult)('creates a new organization with valid inputs', 'fail');\n  throw e;\n}",
              "err": {
                "message": "AssertionError: Timed out retrying after 10000ms: Expected to find content: 'Created successfully!' but never did.",
                "estack": "AssertionError: Timed out retrying after 10000ms: Expected to find content: 'Created successfully!' but never did.\n    at Context.eval (webpack://hydralytica-tests/./cypress/e2e/create_organization.cy.js:76:62)",
                "diff": null
              },
              "uuid": "f0b8e3aa-791a-4d39-9bf6-164458b49ab3",
              "parentUUID": "7659c348-f653-457f-bdb8-10be99012663",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "rejects overly long organization name",
              "fullTitle": "Hydralytica v2 - Create Organization with Extensive Validations rejects overly long organization name",
              "timedOut": null,
              "duration": 32396,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  const longName = 'A'.repeat(256);\n  cy.get('input[name=\"name\"]').clear().type(longName);\n  cy.contains('button', 'Create', {\n    timeout: 10000\n  }).click();\n  cy.contains(_errorMessages.validationErrors.tooLong).should('be.visible');\n  (0, _utils.logTestResult)('rejects overly long organization name', 'pass');\n} catch (e) {\n  (0, _utils.logTestResult)('rejects overly long organization name', 'fail');\n  throw e;\n}",
              "err": {},
              "uuid": "e9d4cd55-ada5-4ee5-9137-48cb663a123c",
              "parentUUID": "7659c348-f653-457f-bdb8-10be99012663",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "rejects overly short organization name",
              "fullTitle": "Hydralytica v2 - Create Organization with Extensive Validations rejects overly short organization name",
              "timedOut": null,
              "duration": 9070,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "try {\n  cy.get('input[name=\"name\"]').clear().type('A');\n  cy.contains('button', 'Create', {\n    timeout: 10000\n  }).click();\n  cy.contains(_errorMessages.validationErrors.tooShort).should('be.visible');\n  (0, _utils.logTestResult)('rejects overly short organization name', 'pass');\n} catch (e) {\n  (0, _utils.logTestResult)('rejects overly short organization name', 'fail');\n  throw e;\n}",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Must be at least 2 characters' but never did.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Must be at least 2 characters' but never did.\n    at Context.eval (webpack://hydralytica-tests/./cypress/e2e/create_organization.cy.js:104:45)",
                "diff": null
              },
              "uuid": "b099d031-40d1-4a74-8740-384f4afc09ec",
              "parentUUID": "7659c348-f653-457f-bdb8-10be99012663",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "rejects SQL injection attempt in organization name",
              "fullTitle": "Hydralytica v2 - Create Organization with Extensive Validations rejects SQL injection attempt in organization name",
              "timedOut": null,
              "duration": 10116,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "try {\n  const maliciousInput = \"' OR 1=1 --\";\n  cy.get('input[name=\"name\"]').clear().type(maliciousInput);\n  cy.contains('button', 'Create', {\n    timeout: 1000\n  }).click();\n  cy.contains(_errorMessages.validationErrors.invalidCharacters).should('be.visible');\n  (0, _utils.logTestResult)('rejects SQL injection attempt in organization name', 'pass');\n} catch (e) {\n  (0, _utils.logTestResult)('rejects SQL injection attempt in organization name', 'fail');\n  throw e;\n}",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Contains invalid characters' but never did.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Contains invalid characters' but never did.\n    at Context.eval (webpack://hydralytica-tests/./cypress/e2e/create_organization.cy.js:118:54)",
                "diff": null
              },
              "uuid": "de47b94a-335d-4d10-b8e3-d63429d136f5",
              "parentUUID": "7659c348-f653-457f-bdb8-10be99012663",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "rejects XSS attempt in notes field",
              "fullTitle": "Hydralytica v2 - Create Organization with Extensive Validations rejects XSS attempt in notes field",
              "timedOut": null,
              "duration": 31644,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "try {\n  const xssInput = \"<script>alert('xss')</script>\";\n  cy.get('textarea[name=\"notes\"]').clear().type(xssInput);\n  cy.contains('button', 'Create', {\n    timeout: 1000\n  }).click();\n  cy.contains(_errorMessages.validationErrors.invalidCharacters).should('be.visible');\n  (0, _utils.logTestResult)('rejects XSS attempt in notes field', 'pass');\n} catch (e) {\n  (0, _utils.logTestResult)('rejects XSS attempt in notes field', 'fail');\n  throw e;\n}",
              "err": {
                "message": "CypressError: `cy.screenshot()` timed out waiting `30000ms` to complete.\n\nhttps://on.cypress.io/screenshot\n\nBecause this error occurred during a `after each` hook we are skipping the remaining tests in the current suite: `Hydralytica v2 - Create Org...`",
                "estack": "CypressError: `cy.screenshot()` timed out waiting `30000ms` to complete.\n\nhttps://on.cypress.io/screenshot\n\nBecause this error occurred during a `after each` hook we are skipping the remaining tests in the current suite: `Hydralytica v2 - Create Org...`\n    at <unknown> (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:137654:73)\n    at tryCatcher (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:1777:23)\n    at <unknown> (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:4156:41)\n    at tryCatcher (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise._settlePromiseFromHandler (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:1489:31)\n    at Promise._settlePromise (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:1546:18)\n    at Promise._settlePromise0 (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:1591:10)\n    at Promise._settlePromises (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:1667:18)\n    at _drainQueueStep (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:2377:12)\n    at _drainQueue (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:2370:9)\n    at Async._drainQueues (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:2386:5)\n    at Async.drainQueues (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:2256:14)",
                "diff": null
              },
              "uuid": "2e4d65c7-c11d-4746-aa30-7fbd33500381",
              "parentUUID": "7659c348-f653-457f-bdb8-10be99012663",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "rejects invalid email: plainaddress",
              "fullTitle": "Hydralytica v2 - Create Organization with Extensive Validations rejects invalid email: plainaddress",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  cy.get('input[name=\"contactFields.contact\"]').clear().type(email);\n  cy.contains('button', 'Add').eq(0).click(); // trigger validation\n  cy.contains(_errorMessages.validationErrors.emailInvalid).should('be.visible');\n  (0, _utils.logTestResult)(`rejects invalid email: ${email}`, 'pass');\n} catch (e) {\n  (0, _utils.logTestResult)(`rejects invalid email: ${email}`, 'fail');\n  throw e;\n}",
              "err": {},
              "uuid": "196d3b2a-8406-4ca6-8db5-d52f1405cb1f",
              "parentUUID": "7659c348-f653-457f-bdb8-10be99012663",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "rejects invalid email: @missingusername.com",
              "fullTitle": "Hydralytica v2 - Create Organization with Extensive Validations rejects invalid email: @missingusername.com",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  cy.get('input[name=\"contactFields.contact\"]').clear().type(email);\n  cy.contains('button', 'Add').eq(0).click(); // trigger validation\n  cy.contains(_errorMessages.validationErrors.emailInvalid).should('be.visible');\n  (0, _utils.logTestResult)(`rejects invalid email: ${email}`, 'pass');\n} catch (e) {\n  (0, _utils.logTestResult)(`rejects invalid email: ${email}`, 'fail');\n  throw e;\n}",
              "err": {},
              "uuid": "980d0b3c-4b66-46cb-adb0-c7e6382db3a7",
              "parentUUID": "7659c348-f653-457f-bdb8-10be99012663",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "rejects invalid email: username@.com",
              "fullTitle": "Hydralytica v2 - Create Organization with Extensive Validations rejects invalid email: username@.com",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  cy.get('input[name=\"contactFields.contact\"]').clear().type(email);\n  cy.contains('button', 'Add').eq(0).click(); // trigger validation\n  cy.contains(_errorMessages.validationErrors.emailInvalid).should('be.visible');\n  (0, _utils.logTestResult)(`rejects invalid email: ${email}`, 'pass');\n} catch (e) {\n  (0, _utils.logTestResult)(`rejects invalid email: ${email}`, 'fail');\n  throw e;\n}",
              "err": {},
              "uuid": "b031cbce-9b10-43ee-b0c7-f6d2efcc15ad",
              "parentUUID": "7659c348-f653-457f-bdb8-10be99012663",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "rejects invalid email: user name@example.com",
              "fullTitle": "Hydralytica v2 - Create Organization with Extensive Validations rejects invalid email: user name@example.com",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  cy.get('input[name=\"contactFields.contact\"]').clear().type(email);\n  cy.contains('button', 'Add').eq(0).click(); // trigger validation\n  cy.contains(_errorMessages.validationErrors.emailInvalid).should('be.visible');\n  (0, _utils.logTestResult)(`rejects invalid email: ${email}`, 'pass');\n} catch (e) {\n  (0, _utils.logTestResult)(`rejects invalid email: ${email}`, 'fail');\n  throw e;\n}",
              "err": {},
              "uuid": "efe76bef-e22e-4edb-8499-35d1eca8b44f",
              "parentUUID": "7659c348-f653-457f-bdb8-10be99012663",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "rejects invalid email: username@example..com",
              "fullTitle": "Hydralytica v2 - Create Organization with Extensive Validations rejects invalid email: username@example..com",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  cy.get('input[name=\"contactFields.contact\"]').clear().type(email);\n  cy.contains('button', 'Add').eq(0).click(); // trigger validation\n  cy.contains(_errorMessages.validationErrors.emailInvalid).should('be.visible');\n  (0, _utils.logTestResult)(`rejects invalid email: ${email}`, 'pass');\n} catch (e) {\n  (0, _utils.logTestResult)(`rejects invalid email: ${email}`, 'fail');\n  throw e;\n}",
              "err": {},
              "uuid": "e035ab62-c101-4d44-96c2-97f85f3cf142",
              "parentUUID": "7659c348-f653-457f-bdb8-10be99012663",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "displays validation errors for empty required fields",
              "fullTitle": "Hydralytica v2 - Create Organization with Extensive Validations displays validation errors for empty required fields",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  cy.get('input[name=\"name\"]').clear();\n  cy.contains('button', 'Add').eq(0).click(); // trigger validation\n  cy.contains(_errorMessages.validationErrors.orgNameRequired).should('be.visible');\n  cy.get('input[name=\"contactFields.contact\"]').clear();\n  cy.contains('button', 'Add').eq(0).click(); // trigger validation\n  cy.contains(_errorMessages.validationErrors.emailRequired).should('be.visible');\n  (0, _utils.logTestResult)('displays validation errors for empty required fields', 'pass');\n} catch (e) {\n  (0, _utils.logTestResult)('displays validation errors for empty required fields', 'fail');\n  throw e;\n}",
              "err": {},
              "uuid": "6200e1c6-80a2-4f67-8db7-2428199eb1df",
              "parentUUID": "7659c348-f653-457f-bdb8-10be99012663",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "shows error when no contact is added",
              "fullTitle": "Hydralytica v2 - Create Organization with Extensive Validations shows error when no contact is added",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  cy.contains('button', 'Add').eq(0).click(); // first Add button\n  cy.contains(_errorMessages.validationErrors.contactIsRequired).should('be.visible');\n  (0, _utils.logTestResult)('shows error when no contact is added', 'pass');\n} catch (e) {\n  (0, _utils.logTestResult)('shows error when no contact is added', 'fail');\n  throw e;\n}",
              "err": {},
              "uuid": "2f01e442-b0d1-4332-b4c3-a46f876751f1",
              "parentUUID": "7659c348-f653-457f-bdb8-10be99012663",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "shows error when no address is added",
              "fullTitle": "Hydralytica v2 - Create Organization with Extensive Validations shows error when no address is added",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  cy.contains('div[data-slot=\"card-title\"]', 'Address').parents('[data-slot=\"card\"]').within(() => {\n    cy.contains('button', 'Add').last().click(); // last Add button\n  });\n  cy.contains(_errorMessages.validationErrors.addressIsRequired).should('be.visible');\n  (0, _utils.logTestResult)('shows error when no address is added', 'pass');\n} catch (e) {\n  (0, _utils.logTestResult)('shows error when no address is added', 'fail');\n  throw e;\n}",
              "err": {},
              "uuid": "2a067923-f101-4116-9b7e-41ef8bf894af",
              "parentUUID": "7659c348-f653-457f-bdb8-10be99012663",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "displays error message on server failure",
              "fullTitle": "Hydralytica v2 - Create Organization with Extensive Validations displays error message on server failure",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  cy.intercept('POST', '/organizations', {\n    statusCode: 500,\n    body: {\n      error: 'Internal Server Error'\n    }\n  }).as('postOrgFail');\n  cy.get('input[name=\"name\"]').clear().type(uniqueOrgName);\n  cy.get('input[name=\"contactFields.contact\"]').clear().type(uniqueEmail);\n  cy.get('select[aria-hidden=\"true\"]').eq(0).select('Corporate', {\n    force: true\n  });\n  cy.get('select[aria-hidden=\"true\"]').eq(1).find('option').contains('dynaCERT Inc.').then($option => {\n    cy.get('select[aria-hidden=\"true\"]').eq(1).select($option.attr('value'), {\n      force: true\n    });\n  });\n  cy.contains('button', 'Create').click();\n  cy.wait('@postOrgFail');\n  cy.contains(_errorMessages.statusErrors.create).should('be.visible');\n  (0, _utils.logTestResult)('displays error message on server failure', 'pass');\n} catch (e) {\n  (0, _utils.logTestResult)('displays error message on server failure', 'fail');\n  throw e;\n}",
              "err": {},
              "uuid": "90a8f66b-20fd-4eee-9b6a-635704258b01",
              "parentUUID": "7659c348-f653-457f-bdb8-10be99012663",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "resets form when clicking Cancel",
              "fullTitle": "Hydralytica v2 - Create Organization with Extensive Validations resets form when clicking Cancel",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  cy.get('input[name=\"name\"]').clear().type('Temp Org');\n  cy.get('input[name=\"contactFields.contact\"]').clear().type('temp@example.com');\n  cy.contains('button', 'Cancel').click();\n  cy.get('input[name=\"name\"]').should('have.value', '');\n  cy.get('input[name=\"contactFields.contact\"]').should('have.value', '');\n  (0, _utils.logTestResult)('resets form when clicking Cancel', 'pass');\n} catch (e) {\n  (0, _utils.logTestResult)('resets form when clicking Cancel', 'fail');\n  throw e;\n}",
              "err": {},
              "uuid": "9ebc855e-0074-4e0b-b97d-95aa3e02a77b",
              "parentUUID": "7659c348-f653-457f-bdb8-10be99012663",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [
            "e9d4cd55-ada5-4ee5-9137-48cb663a123c"
          ],
          "failures": [
            "f0b8e3aa-791a-4d39-9bf6-164458b49ab3",
            "b099d031-40d1-4a74-8740-384f4afc09ec",
            "de47b94a-335d-4d10-b8e3-d63429d136f5",
            "2e4d65c7-c11d-4746-aa30-7fbd33500381"
          ],
          "pending": [],
          "skipped": [
            "196d3b2a-8406-4ca6-8db5-d52f1405cb1f",
            "980d0b3c-4b66-46cb-adb0-c7e6382db3a7",
            "b031cbce-9b10-43ee-b0c7-f6d2efcc15ad",
            "efe76bef-e22e-4edb-8499-35d1eca8b44f",
            "e035ab62-c101-4d44-96c2-97f85f3cf142",
            "6200e1c6-80a2-4f67-8db7-2428199eb1df",
            "2f01e442-b0d1-4332-b4c3-a46f876751f1",
            "2a067923-f101-4116-9b7e-41ef8bf894af",
            "90a8f66b-20fd-4eee-9b6a-635704258b01",
            "9ebc855e-0074-4e0b-b97d-95aa3e02a77b"
          ],
          "duration": 120439,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "create-organization-[datetime]",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "reports/create-organization",
        "overwrite": false,
        "html": true,
        "json": true,
        "reportPageTitle": "User Form Test Report",
        "timestamp": "mmddyyyy_HHMMss",
        "reportFilename": "create-organization-[datetime]"
      },
      "version": "6.2.0"
    }
  }
}