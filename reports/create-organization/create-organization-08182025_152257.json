{
  "stats": {
    "suites": 1,
    "tests": 4,
    "passes": 1,
    "pending": 0,
    "failures": 3,
    "start": "2025-08-18T19:20:49.069Z",
    "end": "2025-08-18T19:22:57.278Z",
    "duration": 128209,
    "testsRegistered": 15,
    "passPercent": 6.666666666666667,
    "pendingPercent": 0,
    "other": 1,
    "hasOther": true,
    "skipped": 11,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "4597479d-f9a7-4cca-8b75-80db14c2f79c",
      "title": "",
      "fullFile": "cypress\\e2e\\create_organization.cy.js",
      "file": "cypress\\e2e\\create_organization.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "070aaf89-2ec2-4537-bddc-87ce21e8cd06",
          "title": "Hydralytica v2 - Create Organization with Extensive Validations",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "creates a new organization with valid inputs",
              "fullTitle": "Hydralytica v2 - Create Organization with Extensive Validations creates a new organization with valid inputs",
              "timedOut": null,
              "duration": 37485,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "try {\n  cy.get('input[name=\"name\"]').clear().type(uniqueOrgName);\n  cy.get('select[aria-hidden=\"true\"]').eq(0).select('Corporate', {\n    force: true\n  });\n  cy.get('select[aria-hidden=\"true\"]').eq(1).find('option').contains('dynaCERT Inc.').then($option => {\n    cy.get('select[aria-hidden=\"true\"]').eq(1).select($option.attr('value'), {\n      force: true\n    });\n  });\n  cy.get('textarea[name=\"notes\"]').clear().type('Test org created by Cypress.');\n  cy.get('input[name=\"contactFields.contact\"]').clear().type(uniqueEmail);\n  cy.get('textarea[name=\"contactFields.description\"]').clear().type('Main contact email.');\n  // ✅ First Add button → contact\n  cy.contains('button', 'Add').eq(0).click({\n    force: true\n  });\n  // Address fields\n  cy.get('input[name=\"addressFields.country\"]').clear().type('Canada');\n  cy.get('input[name=\"addressFields.city\"]').clear().type('Toronto');\n  cy.get('input[name=\"addressFields.address\"]').clear().type('123 Queen Street');\n  cy.get('input[name=\"addressFields.zipCode\"]').clear().type('M5H 2N2');\n  cy.get('input[name=\"addressFields.reference\"]').clear().type('Suite 500');\n  cy.get('input[name=\"addressFields.description\"]').clear().type('Head office location.');\n  // ✅ Last Add button → address\n  cy.contains('div[data-slot=\"card-title\"]', 'Address').parents('[data-slot=\"card\"]').within(() => {\n    cy.contains('button', 'Add').last().click();\n  });\n  cy.contains('button', 'Create', {\n    timeout: 10000\n  }).click();\n  cy.contains(_successMessages.successMessages.create, {\n    timeout: 10000\n  }).should('be.visible');\n  (0, _utils.logTestResult)('creates a new organization with valid inputs', 'pass');\n} catch (e) {\n  (0, _utils.logTestResult)('creates a new organization with valid inputs', 'fail');\n  throw e;\n}",
              "err": {
                "message": "AssertionError: Timed out retrying after 10000ms: Expected to find content: 'Created successfully!' but never did.",
                "estack": "AssertionError: Timed out retrying after 10000ms: Expected to find content: 'Created successfully!' but never did.\n    at Context.eval (webpack://hydralytica-tests/./cypress/e2e/create_organization.cy.js:80:62)",
                "diff": null
              },
              "uuid": "c052b9d2-47ee-4b0e-bb31-e08f46fa652e",
              "parentUUID": "070aaf89-2ec2-4537-bddc-87ce21e8cd06",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "rejects overly long organization name",
              "fullTitle": "Hydralytica v2 - Create Organization with Extensive Validations rejects overly long organization name",
              "timedOut": null,
              "duration": 34101,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  const longName = 'A'.repeat(256);\n  cy.get('input[name=\"name\"]').clear().type(longName);\n  cy.contains('button', 'Create', {\n    timeout: 10000\n  }).click();\n  cy.contains(_errorMessages.validationErrors.tooLong).should('be.visible');\n  (0, _utils.logTestResult)('rejects overly long organization name', 'pass');\n} catch (e) {\n  (0, _utils.logTestResult)('rejects overly long organization name', 'fail');\n  throw e;\n}",
              "err": {},
              "uuid": "d0d9d389-3288-4b85-84a8-2eb6ccfb6402",
              "parentUUID": "070aaf89-2ec2-4537-bddc-87ce21e8cd06",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "rejects overly short organization name",
              "fullTitle": "Hydralytica v2 - Create Organization with Extensive Validations rejects overly short organization name",
              "timedOut": null,
              "duration": 10542,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "try {\n  cy.get('input[name=\"name\"]').clear().type('A');\n  cy.contains('button', 'Create', {\n    timeout: 10000\n  }).click();\n  cy.contains(_errorMessages.validationErrors.tooShort).should('be.visible');\n  (0, _utils.logTestResult)('rejects overly short organization name', 'pass');\n} catch (e) {\n  (0, _utils.logTestResult)('rejects overly short organization name', 'fail');\n  throw e;\n}",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Must be at least 2 characters' but never did.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Must be at least 2 characters' but never did.\n    at Context.eval (webpack://hydralytica-tests/./cypress/e2e/create_organization.cy.js:108:45)",
                "diff": null
              },
              "uuid": "58da6609-97f9-46fb-be28-f3d670331493",
              "parentUUID": "070aaf89-2ec2-4537-bddc-87ce21e8cd06",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "rejects SQL injection attempt in organization name",
              "fullTitle": "Hydralytica v2 - Create Organization with Extensive Validations rejects SQL injection attempt in organization name",
              "timedOut": null,
              "duration": 31265,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "try {\n  const maliciousInput = \"' OR 1=1 --\";\n  cy.get('input[name=\"name\"]').clear().type(maliciousInput);\n  cy.contains('button', 'Create', {\n    timeout: 10000\n  }).click();\n  cy.contains(_errorMessages.validationErrors.invalidCharacters).should('be.visible');\n  (0, _utils.logTestResult)('rejects SQL injection attempt in organization name', 'pass');\n} catch (e) {\n  (0, _utils.logTestResult)('rejects SQL injection attempt in organization name', 'fail');\n  throw e;\n}",
              "err": {
                "message": "CypressError: `cy.screenshot()` timed out waiting `30000ms` to complete.\n\nhttps://on.cypress.io/screenshot\n\nBecause this error occurred during a `after each` hook we are skipping the remaining tests in the current suite: `Hydralytica v2 - Create Org...`",
                "estack": "CypressError: `cy.screenshot()` timed out waiting `30000ms` to complete.\n\nhttps://on.cypress.io/screenshot\n\nBecause this error occurred during a `after each` hook we are skipping the remaining tests in the current suite: `Hydralytica v2 - Create Org...`\n    at <unknown> (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:137654:73)\n    at tryCatcher (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:1777:23)\n    at <unknown> (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:4156:41)\n    at tryCatcher (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise._settlePromiseFromHandler (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:1489:31)\n    at Promise._settlePromise (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:1546:18)\n    at Promise._settlePromise0 (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:1591:10)\n    at Promise._settlePromises (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:1667:18)\n    at _drainQueueStep (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:2377:12)\n    at _drainQueue (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:2370:9)\n    at Async._drainQueues (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:2386:5)\n    at Async.drainQueues (https://staging.hydralytica.dynacert.com/__cypress/runner/cypress_runner.js:2256:14)",
                "diff": null
              },
              "uuid": "3f9a137b-251d-4cfe-8163-38588584e1df",
              "parentUUID": "070aaf89-2ec2-4537-bddc-87ce21e8cd06",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "rejects XSS attempt in notes field",
              "fullTitle": "Hydralytica v2 - Create Organization with Extensive Validations rejects XSS attempt in notes field",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  const xssInput = \"<script>alert('xss')</script>\";\n  cy.get('textarea[name=\"notes\"]').clear().type(xssInput);\n  cy.contains('button', 'Create', {\n    timeout: 10000\n  }).click();\n  cy.contains(_errorMessages.validationErrors.invalidCharacters).should('be.visible');\n  (0, _utils.logTestResult)('rejects XSS attempt in notes field', 'pass');\n} catch (e) {\n  (0, _utils.logTestResult)('rejects XSS attempt in notes field', 'fail');\n  throw e;\n}",
              "err": {},
              "uuid": "2894e903-e86d-457e-8d42-4362b029c2ad",
              "parentUUID": "070aaf89-2ec2-4537-bddc-87ce21e8cd06",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "rejects invalid email: plainaddress",
              "fullTitle": "Hydralytica v2 - Create Organization with Extensive Validations rejects invalid email: plainaddress",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  cy.get('input[name=\"contactFields.contact\"]').clear().type(email);\n  cy.contains('button', 'Add').eq(0).click(); // trigger validation\n  cy.contains(_errorMessages.validationErrors.emailInvalid).should('be.visible');\n  (0, _utils.logTestResult)(`rejects invalid email: ${email}`, 'pass');\n} catch (e) {\n  (0, _utils.logTestResult)(`rejects invalid email: ${email}`, 'fail');\n  throw e;\n}",
              "err": {},
              "uuid": "3ea1de0a-14f5-4e80-9eb5-153e0de0b4f1",
              "parentUUID": "070aaf89-2ec2-4537-bddc-87ce21e8cd06",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "rejects invalid email: @missingusername.com",
              "fullTitle": "Hydralytica v2 - Create Organization with Extensive Validations rejects invalid email: @missingusername.com",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  cy.get('input[name=\"contactFields.contact\"]').clear().type(email);\n  cy.contains('button', 'Add').eq(0).click(); // trigger validation\n  cy.contains(_errorMessages.validationErrors.emailInvalid).should('be.visible');\n  (0, _utils.logTestResult)(`rejects invalid email: ${email}`, 'pass');\n} catch (e) {\n  (0, _utils.logTestResult)(`rejects invalid email: ${email}`, 'fail');\n  throw e;\n}",
              "err": {},
              "uuid": "563a8cc2-7551-4421-80fa-e7fdfd490199",
              "parentUUID": "070aaf89-2ec2-4537-bddc-87ce21e8cd06",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "rejects invalid email: username@.com",
              "fullTitle": "Hydralytica v2 - Create Organization with Extensive Validations rejects invalid email: username@.com",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  cy.get('input[name=\"contactFields.contact\"]').clear().type(email);\n  cy.contains('button', 'Add').eq(0).click(); // trigger validation\n  cy.contains(_errorMessages.validationErrors.emailInvalid).should('be.visible');\n  (0, _utils.logTestResult)(`rejects invalid email: ${email}`, 'pass');\n} catch (e) {\n  (0, _utils.logTestResult)(`rejects invalid email: ${email}`, 'fail');\n  throw e;\n}",
              "err": {},
              "uuid": "6889644a-a215-4085-8254-d48a3d9fafed",
              "parentUUID": "070aaf89-2ec2-4537-bddc-87ce21e8cd06",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "rejects invalid email: user name@example.com",
              "fullTitle": "Hydralytica v2 - Create Organization with Extensive Validations rejects invalid email: user name@example.com",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  cy.get('input[name=\"contactFields.contact\"]').clear().type(email);\n  cy.contains('button', 'Add').eq(0).click(); // trigger validation\n  cy.contains(_errorMessages.validationErrors.emailInvalid).should('be.visible');\n  (0, _utils.logTestResult)(`rejects invalid email: ${email}`, 'pass');\n} catch (e) {\n  (0, _utils.logTestResult)(`rejects invalid email: ${email}`, 'fail');\n  throw e;\n}",
              "err": {},
              "uuid": "9cb542a5-179a-4a51-950a-6ebe1e2c4d8f",
              "parentUUID": "070aaf89-2ec2-4537-bddc-87ce21e8cd06",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "rejects invalid email: username@example..com",
              "fullTitle": "Hydralytica v2 - Create Organization with Extensive Validations rejects invalid email: username@example..com",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  cy.get('input[name=\"contactFields.contact\"]').clear().type(email);\n  cy.contains('button', 'Add').eq(0).click(); // trigger validation\n  cy.contains(_errorMessages.validationErrors.emailInvalid).should('be.visible');\n  (0, _utils.logTestResult)(`rejects invalid email: ${email}`, 'pass');\n} catch (e) {\n  (0, _utils.logTestResult)(`rejects invalid email: ${email}`, 'fail');\n  throw e;\n}",
              "err": {},
              "uuid": "a566b746-d8ef-4a09-99c1-7fa59dc53b2f",
              "parentUUID": "070aaf89-2ec2-4537-bddc-87ce21e8cd06",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "displays validation errors for empty required fields",
              "fullTitle": "Hydralytica v2 - Create Organization with Extensive Validations displays validation errors for empty required fields",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  cy.get('input[name=\"name\"]').clear();\n  cy.contains('button', 'Add').eq(0).click(); // trigger validation\n  cy.contains(_errorMessages.validationErrors.orgNameRequired).should('be.visible');\n  cy.get('input[name=\"contactFields.contact\"]').clear();\n  cy.contains('button', 'Add').eq(0).click(); // trigger validation\n  cy.contains(_errorMessages.validationErrors.emailRequired).should('be.visible');\n  (0, _utils.logTestResult)('displays validation errors for empty required fields', 'pass');\n} catch (e) {\n  (0, _utils.logTestResult)('displays validation errors for empty required fields', 'fail');\n  throw e;\n}",
              "err": {},
              "uuid": "ed7e003a-886b-483e-be64-8154bb42afb8",
              "parentUUID": "070aaf89-2ec2-4537-bddc-87ce21e8cd06",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "shows error when no contact is added",
              "fullTitle": "Hydralytica v2 - Create Organization with Extensive Validations shows error when no contact is added",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  cy.contains('button', 'Add').eq(0).click(); // first Add button\n  cy.contains(_errorMessages.validationErrors.contactIsRequired).should('be.visible');\n  (0, _utils.logTestResult)('shows error when no contact is added', 'pass');\n} catch (e) {\n  (0, _utils.logTestResult)('shows error when no contact is added', 'fail');\n  throw e;\n}",
              "err": {},
              "uuid": "d4a67e38-42e5-4da4-9d19-4af1b74d33b0",
              "parentUUID": "070aaf89-2ec2-4537-bddc-87ce21e8cd06",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "shows error when no address is added",
              "fullTitle": "Hydralytica v2 - Create Organization with Extensive Validations shows error when no address is added",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  cy.contains('div[data-slot=\"card-title\"]', 'Address').parents('[data-slot=\"card\"]').within(() => {\n    cy.contains('button', 'Add').last().click(); // last Add button\n  });\n  cy.contains(_errorMessages.validationErrors.addressIsRequired).should('be.visible');\n  (0, _utils.logTestResult)('shows error when no address is added', 'pass');\n} catch (e) {\n  (0, _utils.logTestResult)('shows error when no address is added', 'fail');\n  throw e;\n}",
              "err": {},
              "uuid": "de24554f-b59e-4438-91ea-51730eea6109",
              "parentUUID": "070aaf89-2ec2-4537-bddc-87ce21e8cd06",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "displays error message on server failure",
              "fullTitle": "Hydralytica v2 - Create Organization with Extensive Validations displays error message on server failure",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  cy.intercept('POST', '/organizations', {\n    statusCode: 500,\n    body: {\n      error: 'Internal Server Error'\n    }\n  }).as('postOrgFail');\n  cy.get('input[name=\"name\"]').clear().type(uniqueOrgName);\n  cy.get('input[name=\"contactFields.contact\"]').clear().type(uniqueEmail);\n  cy.get('select[aria-hidden=\"true\"]').eq(0).select('Corporate', {\n    force: true\n  });\n  cy.get('select[aria-hidden=\"true\"]').eq(1).find('option').contains('dynaCERT Inc.').then($option => {\n    cy.get('select[aria-hidden=\"true\"]').eq(1).select($option.attr('value'), {\n      force: true\n    });\n  });\n  cy.contains('button', 'Create').click();\n  cy.wait('@postOrgFail');\n  cy.contains(_errorMessages.statusErrors.create).should('be.visible');\n  (0, _utils.logTestResult)('displays error message on server failure', 'pass');\n} catch (e) {\n  (0, _utils.logTestResult)('displays error message on server failure', 'fail');\n  throw e;\n}",
              "err": {},
              "uuid": "6990c8b4-38e0-4137-bcb9-028a75a5f954",
              "parentUUID": "070aaf89-2ec2-4537-bddc-87ce21e8cd06",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "resets form when clicking Cancel",
              "fullTitle": "Hydralytica v2 - Create Organization with Extensive Validations resets form when clicking Cancel",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  cy.get('input[name=\"name\"]').clear().type('Temp Org');\n  cy.get('input[name=\"contactFields.contact\"]').clear().type('temp@example.com');\n  cy.contains('button', 'Cancel').click();\n  cy.get('input[name=\"name\"]').should('have.value', '');\n  cy.get('input[name=\"contactFields.contact\"]').should('have.value', '');\n  (0, _utils.logTestResult)('resets form when clicking Cancel', 'pass');\n} catch (e) {\n  (0, _utils.logTestResult)('resets form when clicking Cancel', 'fail');\n  throw e;\n}",
              "err": {},
              "uuid": "a6473d28-bc84-428f-bd9a-02e4f1f0cddf",
              "parentUUID": "070aaf89-2ec2-4537-bddc-87ce21e8cd06",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [
            "d0d9d389-3288-4b85-84a8-2eb6ccfb6402"
          ],
          "failures": [
            "c052b9d2-47ee-4b0e-bb31-e08f46fa652e",
            "58da6609-97f9-46fb-be28-f3d670331493",
            "3f9a137b-251d-4cfe-8163-38588584e1df"
          ],
          "pending": [],
          "skipped": [
            "2894e903-e86d-457e-8d42-4362b029c2ad",
            "3ea1de0a-14f5-4e80-9eb5-153e0de0b4f1",
            "563a8cc2-7551-4421-80fa-e7fdfd490199",
            "6889644a-a215-4085-8254-d48a3d9fafed",
            "9cb542a5-179a-4a51-950a-6ebe1e2c4d8f",
            "a566b746-d8ef-4a09-99c1-7fa59dc53b2f",
            "ed7e003a-886b-483e-be64-8154bb42afb8",
            "d4a67e38-42e5-4da4-9d19-4af1b74d33b0",
            "de24554f-b59e-4438-91ea-51730eea6109",
            "6990c8b4-38e0-4137-bcb9-028a75a5f954",
            "a6473d28-bc84-428f-bd9a-02e4f1f0cddf"
          ],
          "duration": 113393,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "create-organization-[datetime]",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "reports/create-organization",
        "overwrite": false,
        "html": true,
        "json": true,
        "reportPageTitle": "User Form Test Report",
        "timestamp": "mmddyyyy_HHMMss",
        "reportFilename": "create-organization-[datetime]"
      },
      "version": "6.2.0"
    }
  }
}